{"version":3,"sources":["components/Chat.module.scss","components/Block.module.scss","components/Conversation.module.scss","reducers/types.js","pop.mp3","reducers/act.js","components/Block.jsx","components/Conversation.jsx","send.svg","accept.svg","components/Settings.jsx","components/Chat.jsx","Ic_settings_48px.svg","fire.png","App.js","reducers/rootReducer.js","reducers/index.js","index.js","components/Settings.module.scss"],"names":["module","exports","ADD_MESSAGE","UPDATE_NAME","SWITCH_HIGHTLIGHT","CREATE_MESSAGE","updateCurrentName","id","name","col","type","payload","color","highlightingNameHandler","val","updateCurrentNameHelper","dispatch","trim","localStorage","setItem","setTimeout","Block","message","anim","style","backgroundColor","className","styles","block__container","Conversation","loadanim","messages","useSelector","state","app","wrapper","React","createRef","useEffect","elementHeight","current","scrollHeight","scrollTop","conversation__container","ref","map","m","length","id_message","Settings","act_settings","current_user","setActSetting","setting_open","useState","display","anim_sett","setAnimSett","new_name","setNewName","highlighting","useDispatch","container","useRef","handleClickOutside","e","contains","target","document","addEventListener","removeEventListener","settings","open__settings","close__settings","onClick","on","off","input_block","onSubmit","preventDefault","getItem","Date","now","setName","value","autoFocus","onChange","nameHandler","src","accept","alt","block_color","i","colors","_active","setColor","Chat","setMessage","currentUser","send_count","setSendCount","setLoadanim","focus","setFocus","sendMessage","new_message","getUTCMilliseconds","db","firebase","database","push","once","snapshot","data","child","Object","keys","remove","Audio","send_pop","play","addMessageHelper","setInterval","chat__container","loading","chat_form","placeholder","onBlur","messageHandler","send","App","apps","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","messcheck","array","key","fire_img","setting","initialState","rootReducer","action","allReducers","combineReducers","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.64608535.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat__container\":\"Chat_chat__container__1b5JB\",\"loading\":\"Chat_loading__bNtEN\",\"chat_form\":\"Chat_chat_form__3EfcJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block__container\":\"Block_block__container__2r765\",\"anim\":\"Block_anim__38VR2\",\"openSetAnim\":\"Block_openSetAnim__16SFi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conversation__container\":\"Conversation_conversation__container__KPhM2\",\"wrapper\":\"Conversation_wrapper__2ncYM\"};","export const ADD_MESSAGE = \"ADD_MESSAGE\"\r\nexport const UPDATE_NAME = \"UPDATE_NAME\"\r\nexport const UPDATE_COLOR = \"UPDATE_COLOR\"\r\nexport const SWITCH_HIGHTLIGHT = \"SWITCH_HIGHTLIGHT\"\r\nexport const CREATE_MESSAGE = \"CREATE_MESSAGE\"\r\n\r\n","export default __webpack_public_path__ + \"static/media/pop.ce6c9687.mp3\";","import {ADD_MESSAGE, UPDATE_NAME, SWITCH_HIGHTLIGHT, CREATE_MESSAGE} from './types'\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\nimport send_pop from './../pop.mp3'\r\n\r\nexport const createMessages = (messages) => {\r\n    return{\r\n        type: CREATE_MESSAGE,\r\n        payload: {messages}\r\n    }\r\n}\r\n\r\nexport const addMessage = (obj) => {\r\n    console.log(obj)\r\n    return{\r\n        type: ADD_MESSAGE,\r\n        payload: {obj}\r\n    }\r\n}\r\n\r\nexport const updateCurrentName = (id, name, col) => {\r\n    return{\r\n        type: UPDATE_NAME,\r\n        payload: {id, name, color: col}\r\n    }\r\n}\r\n\r\nexport const highlightingNameHandler = (val) => {\r\n    return{\r\n        type: SWITCH_HIGHTLIGHT,\r\n        payload: {val}\r\n    }\r\n}\r\n\r\n\r\nexport const addMessageHelper = (id, message, name, color) => {\r\n        const new_message = {id, id_message: new Date().getUTCMilliseconds() + Date.now(), message, name, color}\r\n        const db = firebase.database();\r\n        \r\n        db.ref('messages').push(new_message);\r\n        db.ref('messages').once('value', (snapshot) => {\r\n            const data = snapshot.val()\r\n            db.ref('messages').child(Object.keys(data)[0]).remove()\r\n        })\r\n        \r\n        const audio = new Audio(send_pop)\r\n        audio.play()\r\n}\r\n\r\nexport const updateCurrentNameHelper = (id, name, col, dispatch) => {\r\n    if(name.trim() !== \"\"){\r\n        localStorage.setItem('color', col); // 100%\r\n        localStorage.setItem('name', name); // 100%\r\n        localStorage.setItem('id', id); // 100%\r\n        dispatch(updateCurrentName(id, name, col))\r\n\r\n        dispatch(highlightingNameHandler(true))\r\n        setTimeout(() => {\r\n            dispatch(highlightingNameHandler(false))\r\n        }, 3000);\r\n    }\r\n}","import React from 'react'\r\nimport styles from './Block.module.scss'\r\n\r\nconst Block = ({message, name, color, anim}) => {\r\n\r\n    return (\r\n        <div style={{backgroundColor: color}} className={anim?styles.block__container+\" \"+styles.anim:styles.block__container}>\r\n            <h6>{name}</h6>\r\n            <h3>{message}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Block","import React, { useEffect, useRef, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Block from './Block'\r\nimport styles from './Conversation.module.scss'\r\n\r\nconst Conversation = ({loadanim}) => {\r\n\r\n    const messages = useSelector(state => state.app.messages)\r\n    let wrapper = React.createRef();\r\n\r\n    useEffect(() => {\r\n        const elementHeight = wrapper.current.scrollHeight;\r\n        wrapper.current.scrollTop = elementHeight\r\n    }, [messages, wrapper])\r\n\r\n\r\n\r\n    return (\r\n        <div className={styles.conversation__container}>\r\n            <div ref={wrapper} className={styles.wrapper}>\r\n                {messages.map(m => \r\n                <Block \r\n                key={m.id_message} \r\n                message={m.message} \r\n                anim={((messages[messages.length-1].id_message===m.id_message)&loadanim)?true:false} \r\n                color={m.color} name={m.name}/>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Conversation","export default __webpack_public_path__ + \"static/media/send.9010885d.svg\";","export default __webpack_public_path__ + \"static/media/accept.46918b1b.svg\";","import React, { useEffect, useRef, useState } from 'react'\r\nimport styles from './Settings.module.scss'\r\nimport send from './../send.svg'\r\nimport accept from './../accept.svg'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateCurrentNameHelper } from '../reducers/act';\r\n\r\nconst Settings = ({act_settings, current_user, setActSetting, setting_open}) => {\r\n\r\n    let [anim_sett, setAnimSett] = useState({display: 'none'});\r\n    let [new_name, setNewName] = useState(\"\");\r\n    const highlighting = useSelector(state => state.app.highlighting);\r\n    const colors = [\"#345444\", \"#433454\", \"#54344f\", \"#543437\", \"#345254\", \"#343654\", \"#515434\", \"#503057\"]\r\n    const dispatch = useDispatch();\r\n    let container = useRef();\r\n\r\n    const handleClickInside = () => setActSetting(true)\r\n\r\n    const handleClickOutside = e => {\r\n        if (!container.current.contains(e.target) & !setting_open.current.contains(e.target)) {\r\n            setActSetting(false);\r\n        }\r\n    };\r\n\r\n    const nameHandler = (e) => {\r\n        if(e.target.value.length <= 23){\r\n            setNewName(e.target.value)\r\n        }\r\n    }\r\n\r\n    function setName (e){\r\n        e.preventDefault()\r\n        if(!!localStorage.getItem(\"color\"))\r\n        updateCurrentNameHelper(Date.now(), new_name, localStorage.getItem(\"color\"), dispatch)\r\n        else\r\n        updateCurrentNameHelper(Date.now(), new_name, current_user.color, dispatch)\r\n    }\r\n    function setColor (col){\r\n        if(!!localStorage.getItem(\"name\"))\r\n        updateCurrentNameHelper(Date.now(), localStorage.getItem(\"name\"), col, dispatch)\r\n        else\r\n        updateCurrentNameHelper(Date.now(), current_user.name, col, dispatch)\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => document.removeEventListener('mousedown', handleClickOutside);\r\n    });\r\n\r\n    useEffect(() => {\r\n        !act_settings\r\n        ?setTimeout(() => setAnimSett({display: 'none'}), 200)\r\n        :setAnimSett({display: 'block'})\r\n        setNewName(current_user.name)\r\n    }, [act_settings, current_user.name])\r\n\r\n    return (\r\n        <div \r\n        style={anim_sett}\r\n        className={act_settings\r\n            ?styles.settings+\" \"+styles.open__settings\r\n            :styles.settings+\" \"+styles.close__settings}\r\n        onClick={handleClickInside}\r\n        ref={container} \r\n            >\r\n            <span className={styles.highlighting+\" \"+(highlighting?styles.on:styles.off)}>Изменено!</span>\r\n            <div>\r\n                <p>Имя</p>\r\n            <form className={styles.input_block} onSubmit={(e) => setName(e)}>\r\n                <input value={new_name} autoFocus onChange={(e) => nameHandler(e)}/>\r\n                <button type=\"submit\"><img src={accept} alt=\"\"/></button>\r\n            </form>\r\n            </div>\r\n            <div>\r\n                <p>Цвет диалога</p>\r\n                <div className={styles.block_color}>\r\n                    {colors.map((col, i) => \r\n                    <div key={i} \r\n                    className={styles.colors+((current_user.color===col)?(\" \"+styles._active):\"\")} \r\n                    onClick={() => setColor(col)}\r\n                    style={{backgroundColor: col}}>\r\n                    </div>)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Settings","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { addMessageHelper } from '../reducers/act'\r\nimport styles from './Chat.module.scss'\r\nimport Conversation from './Conversation'\r\nimport Settings from './Settings'\r\nimport send from './../send.svg'\r\n\r\nconst Chat = ({act_settings, setActSetting, setting_open}) => {\r\n\r\n    const [message, setMessage] = useState(\"\")\r\n    const current_user = useSelector(state => state.app.currentUser);\r\n    const messages = useSelector(state => state.app.messages);\r\n    let [send_count, setSendCount] = useState(1);\r\n    const [loadanim, setLoadanim] = useState(false);\r\n    const [focus, setFocus] = useState(true)\r\n    \r\n    const sendMessage = (e) => {\r\n        e.preventDefault()\r\n        setSendCount(send_count + 1)\r\n        setFocus(true)\r\n\r\n        if(send_count <= 2){ // ANTIFLUD\r\n            if(message.trim() !== \"\"){\r\n                addMessageHelper(current_user.id, message, current_user.name, current_user.color)\r\n                setLoadanim(true)\r\n                setMessage(\"\")\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const messageHandler = (e) => {\r\n        if(e.target.value.length <= 500){// Ограничение на ввод\r\n            setMessage(e.target.value) \r\n        }\r\n    } \r\n\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            setSendCount(1) // UPDATE send_count\r\n        }, 2000);\r\n    }, [])\r\n\r\n    return (\r\n        <div className={styles.chat__container}>\r\n            <Settings act_settings={act_settings} current_user={current_user} setActSetting={setActSetting} setting_open={setting_open}/>\r\n            <Conversation loadanim={loadanim}/>\r\n            {(messages.length===0)&&<div className={styles.loading}>Loading...</div>}\r\n            <form className={styles.chat_form} onSubmit={(e) => sendMessage(e)}>\r\n                <input value={message} placeholder={\"Введите ваше сообщение...\"} autoFocus={focus} onBlur={!focus} onChange={(e) => messageHandler(e)}/>\r\n                <button type='submit'><img src={send} alt=\"\"/></button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat","export default __webpack_public_path__ + \"static/media/Ic_settings_48px.262b7422.svg\";","export default __webpack_public_path__ + \"static/media/fire.8ce276ff.png\";","import React, { useEffect, useRef, useState } from 'react'\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\nimport { useDispatch } from 'react-redux';\r\nimport Chat from './components/Chat';\r\nimport setting from './Ic_settings_48px.svg'\r\nimport fire_img from './fire.png'\r\nimport { createMessages, updateCurrentName } from './reducers/act';\r\n\r\n\r\nconst App = () => {\r\n    if (!firebase.apps.length) {\r\n        firebase.initializeApp({\r\n            apiKey: \"AIzaSyCb9QPjqI6qS26ekA-8UxQaMLoeReQSU3c\",\r\n            authDomain: \"chat-3a1bb.firebaseapp.com\",\r\n            databaseURL: \"https://chat-3a1bb-default-rtdb.firebaseio.com\",\r\n            projectId: \"chat-3a1bb\",\r\n            storageBucket: \"chat-3a1bb.appspot.com\",\r\n            messagingSenderId: \"273094649471\",\r\n            appId: \"1:273094649471:web:c74745a4fe24ecd38cc14a\"\r\n        })\r\n     }else {\r\n        firebase.app();\r\n     }\r\n\r\n    const [act_settings, setActSetting] = useState(false);\r\n    const db = firebase.database();\r\n    const messcheck = db.ref('messages');\r\n    const dispatch = useDispatch();\r\n    const setting_open = useRef();\r\n\r\n    function targetSettings () {\r\n        setActSetting(!act_settings)\r\n    }\r\n\r\n    useEffect(() => {\r\n    messcheck.on('value', (snapshot) => {\r\n        const data = snapshot.val()\r\n        const array = []\r\n        Object.keys(data).map(key => array.push(data[key]))\r\n\r\n        dispatch(createMessages(array))\r\n    })\r\n    \r\n    if(!!localStorage.getItem('id') & !!localStorage.getItem('name') & !!localStorage.getItem('color')){\r\n        dispatch(updateCurrentName(localStorage.getItem('id'), localStorage.getItem('name'), localStorage.getItem('color')))\r\n    }\r\n    }, [dispatch, messcheck])\r\n    \r\n    return (\r\n        <div className=\"field container\">\r\n            <div className=\"header\">\r\n                <h1>Boiler<img src={fire_img} className=\"fire_img\"/></h1>\r\n                <img \r\n                src={setting} \r\n                className={act_settings?\"active\":\"disable\"} \r\n                onClick={() => targetSettings()} \r\n                ref={setting_open} \r\n                alt=\"\"/>\r\n            </div>\r\n            <Chat setting_open={setting_open} act_settings={act_settings} setActSetting={setActSetting}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import {ADD_MESSAGE, CREATE_MESSAGE, SWITCH_HIGHTLIGHT, UPDATE_NAME} from './types'\r\n\r\nconst initialState = {\r\n    messages: [],\r\n    currentUser: {id: Date.now(), name: 'noname', color: '#345444'},\r\n    highlighting: false\r\n}\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            return {...state, messages: [...state.messages]}\r\n        case CREATE_MESSAGE:\r\n            return {...state, messages: action.payload.messages}\r\n        case UPDATE_NAME:\r\n            return {...state, currentUser: {\r\n                id: action.payload.id, \r\n                name: action.payload.name, \r\n                color: action.payload.color\r\n            }\r\n        }\r\n        case SWITCH_HIGHTLIGHT:\r\n            return {...state, highlighting: action.payload.val}\r\n            default:\r\n                return state\r\n    }\r\n}\r\nexport default rootReducer","import { combineReducers } from \"redux\"\r\nimport rootReducer from './rootReducer'\r\n\r\nconst allReducers =  combineReducers({\r\n        app: rootReducer\r\n    })\r\n\r\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport {Provider} from 'react-redux'\nimport App from './App';\nimport thunk from 'redux-thunk'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport allReducers from './reducers';\n\nconst store = createStore(allReducers, compose(\n  applyMiddleware(\n    thunk\n  )\n  ));\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__1ubZi\",\"highlighting\":\"Settings_highlighting__3nuIu\",\"on\":\"Settings_on__21axI\",\"off\":\"Settings_off__13VSC\",\"input_block\":\"Settings_input_block__3ag4R\",\"block_color\":\"Settings_block_color__ZaCsE\",\"colors\":\"Settings_colors__g-zFX\",\"_active\":\"Settings__active__3ngYf\",\"open__settings\":\"Settings_open__settings__1nO2X\",\"openSetAnim\":\"Settings_openSetAnim__zxJ2D\",\"close__settings\":\"Settings_close__settings__2ElFC\",\"closeSetAnim\":\"Settings_closeSetAnim__1ynu9\"};"],"sourceRoot":""}